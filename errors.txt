info: component 'llvm-tools' for target 'x86_64-apple-darwin' is up to date
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on package cache
    Blocking waiting for file lock on build directory
warning: unused import: `Paren`
  --> info-flow-library/ifc_library/macros/src/lib.rs:12:37
   |
12 | use syn::token::{Comma, Colon2, Eq, Paren};
   |                                     ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `is_dynamic`
   --> info-flow-library/ifc_library/macros/src/lib.rs:990:72
    |
990 | fn secret_block_backend_helper(input: TokenStream, is_duplicate: bool, is_dynamic: bool) -> TokenStream {
    |                                                                        ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_dynamic`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `expr1`
    --> info-flow-library/ifc_library/macros/src/lib.rs:1120:195
     |
1120 | ...artial_declassify_state: i32, expr1: Option<Expr>, expr2: Option<Expr>, expr3: Option<Expr>, expr4: Option<Expr>) -> TokenStream {
     |                                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_expr1`

warning: unused variable: `expr2`
    --> info-flow-library/ifc_library/macros/src/lib.rs:1120:216
     |
1120 | ...te: i32, expr1: Option<Expr>, expr2: Option<Expr>, expr3: Option<Expr>, expr4: Option<Expr>) -> TokenStream {
     |                                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_expr2`

warning: unused variable: `expr3`
    --> info-flow-library/ifc_library/macros/src/lib.rs:1120:237
     |
1120 | ...n<Expr>, expr2: Option<Expr>, expr3: Option<Expr>, expr4: Option<Expr>) -> TokenStream {
     |                                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_expr3`

warning: unused variable: `expr4`
    --> info-flow-library/ifc_library/macros/src/lib.rs:1120:258
     |
1120 | ...n<Expr>, expr3: Option<Expr>, expr4: Option<Expr>) -> TokenStream {
     |                                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_expr4`

warning: value assigned to `is_method` is never read
    --> info-flow-library/ifc_library/macros/src/lib.rs:3739:13
     |
3739 |     let mut is_method = false;
     |             ^^^^^^^^^
     |
     = help: maybe it is overwritten before being read?
     = note: `#[warn(unused_assignments)]` on by default

warning: value assigned to `is_method` is never read
    --> info-flow-library/ifc_library/macros/src/lib.rs:3845:13
     |
3845 |     let mut is_method = false;
     |             ^^^^^^^^^
     |
     = help: maybe it is overwritten before being read?

warning: variable does not need to be mutable
    --> info-flow-library/ifc_library/macros/src/lib.rs:1043:9
     |
1043 |     let mut init_code: proc_macro2::TokenStream;
     |         ----^^^^^^^^^
     |         |
     |         help: remove this `mut`
     |
     = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
    --> info-flow-library/ifc_library/macros/src/lib.rs:1044:9
     |
1044 |     let mut return_init_code: proc_macro2::TokenStream;
     |         ----^^^^^^^^^^^^^^^^
     |         |
     |         help: remove this `mut`

warning: variable does not need to be mutable
    --> info-flow-library/ifc_library/macros/src/lib.rs:2997:21
     |
2997 |                 let mut path_str = quote::quote! {#path}.to_string();
     |                     ----^^^^^^^^
     |                     |
     |                     help: remove this `mut`

warning: `secret_macros` (lib) generated 11 warnings (run `cargo fix --lib -p secret_macros` to apply 9 suggestions)
warning: unused import: `std::mem::ManuallyDrop`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:200:5
    |
200 | use std::mem::ManuallyDrop;
    |     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::ternary_lattice::Label`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:209:5
    |
209 | use crate::ternary_lattice::Label;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `SerializeStruct`, `Serialize`, `Serializer`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:212:18
    |
212 | use serde::ser::{Serialize, Serializer, SerializeStruct};
    |                  ^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unused import: `Deserializer`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:213:26
    |
213 | use serde::{Deserialize, Deserializer};
    |                          ^^^^^^^^^^^^

warning: type `Label_NotX` should have an upper camel case name
 --> info-flow-library/ifc_library/secret_structs/src/integrity_lattice.rs:7:12
  |
7 | pub struct Label_NotX { }
  |            ^^^^^^^^^^ help: convert the identifier to upper camel case: `LabelNotX`
  |
  = note: `#[warn(non_camel_case_types)]` on by default

warning: type `Label_NotY` should have an upper camel case name
 --> info-flow-library/ifc_library/secret_structs/src/integrity_lattice.rs:9:12
  |
9 | pub struct Label_NotY { }
  |            ^^^^^^^^^^ help: convert the identifier to upper camel case: `LabelNotY`

warning: type `Label_NotZ` should have an upper camel case name
  --> info-flow-library/ifc_library/secret_structs/src/integrity_lattice.rs:11:12
   |
11 | pub struct Label_NotZ { }
   |            ^^^^^^^^^^ help: convert the identifier to upper camel case: `LabelNotZ`

warning: type `Label_NotXY` should have an upper camel case name
  --> info-flow-library/ifc_library/secret_structs/src/integrity_lattice.rs:15:12
   |
15 | pub struct Label_NotXY { }
   |            ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LabelNotXy`

warning: type `Label_NotYZ` should have an upper camel case name
  --> info-flow-library/ifc_library/secret_structs/src/integrity_lattice.rs:17:12
   |
17 | pub struct Label_NotYZ { }
   |            ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LabelNotYz`

warning: type `Label_NotXZ` should have an upper camel case name
  --> info-flow-library/ifc_library/secret_structs/src/integrity_lattice.rs:19:12
   |
19 | pub struct Label_NotXZ { }
   |            ^^^^^^^^^^^ help: convert the identifier to upper camel case: `LabelNotXz`

warning: type `Label_All` should have an upper camel case name
  --> info-flow-library/ifc_library/secret_structs/src/integrity_lattice.rs:32:12
   |
32 | pub struct Label_All { }
   |            ^^^^^^^^^ help: convert the identifier to upper camel case: `LabelAll`

warning: type `Label_NotXYZ` should have an upper camel case name
  --> info-flow-library/ifc_library/secret_structs/src/integrity_lattice.rs:34:12
   |
34 | pub struct Label_NotXYZ { }
   |            ^^^^^^^^^^^^ help: convert the identifier to upper camel case: `LabelNotXyz`

warning: crate-level attribute should be in the root module
 --> info-flow-library/ifc_library/secret_structs/src/secret.rs:1:1
  |
1 | #![feature(trace_macros)]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_attributes)]` on by default

warning: unused variable: `other`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:697:30
    |
697 |     fn static_union<T>(self, other: &T) -> ()
    |                              ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `other`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:705:37
    |
705 |     fn static_intersection<T>(self, other: &T) -> ()
    |                                     ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:738:25
    |
738 |     fn subset_of(&self, other: &DynamicSecretLabel) -> bool
    |                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:743:28
    |
743 |     fn less_than<T>(&self, other: &T) -> bool
    |                            ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:751:28
    |
751 |     fn less_than<T>(&self, other: &T) -> bool
    |                            ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:759:38
    |
759 |     fn dynamic_intersection<T>(self, other: &T) -> DynamicIntegrityLabel 
    |                                      ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: unused variable: `other`
   --> info-flow-library/ifc_library/secret_structs/src/secret.rs:768:25
    |
768 |     fn subset_of(&self, other: &DynamicIntegrityLabel) -> bool
    |                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_other`

warning: `secret_structs` (lib) generated 20 warnings (run `cargo fix --lib -p secret_structs` to apply 11 suggestions)
warning: unused import: `secret_macros::InvisibleSideEffectFreeDerive`
 --> components/keyboard_wrapper/lib.rs:5:5
  |
5 | use secret_macros::InvisibleSideEffectFreeDerive;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `keyboard_wrapper` (lib) generated 1 warning (run `cargo fix --lib -p keyboard_wrapper` to apply 1 suggestion)
warning: unused import: `keyboard_types::KeyboardEvent`
  --> components/embedder_traits/lib.rs:18:5
   |
18 | use keyboard_types::KeyboardEvent;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `embedder_traits` (lib) generated 1 warning (run `cargo fix --lib -p embedder_traits` to apply 1 suggestion)
   Compiling script v0.0.1 (/Users/vincentbeardsley/Desktop/servo-ifc.nosync/components/script)
warning: unused import: `crate::script_thread::ScriptThread`
  --> components/script/dom/htmlinputelement.rs:46:5
   |
46 | use crate::script_thread::ScriptThread;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `crate::script_thread::ScriptThread`
  --> components/script/dom/htmltextareaelement.rs:47:5
   |
47 | use crate::script_thread::ScriptThread;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `secret_structs::info_flow_block_no_return_dynamic_all`
  --> components/script/dom/htmltextareaelement.rs:49:5
   |
49 | use secret_structs::info_flow_block_no_return_dynamic_all;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `UTF8Bytes`
  --> components/script/dom/textcontrol.rs:18:71
   |
18 | use crate::textinput::{SelectionDirection, SelectionState, TextInput, UTF8Bytes};
   |                                                                       ^^^^^^^^^

warning: unused import: `keyboard_wrapper::*`
  --> components/script/dom/textcontrol.rs:26:5
   |
26 | use keyboard_wrapper::*;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CodeWrapper`, `KeyStateWrapper`, `KeyWrapper`, `LocationWrapper`, `ModifiersWrapper`
   --> components/script/script_thread.rs:175:42
    |
175 | use keyboard_wrapper::{SecKeyboardEvent, KeyStateWrapper, KeyWrapper, LocationWrapper, ModifiersWrapper, CodeWrapper};
    |                                          ^^^^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^

warning: unnecessary trailing semicolon
    --> components/script/textinput.rs:1089:25
     |
1089 |                         ;
     |                         ^ help: remove this semicolon
     |
     = note: `#[warn(redundant_semicolons)]` on by default

warning: unnecessary parentheses around `if` condition
    --> components/script/textinput.rs:1449:12
     |
1449 |         if (self.lines.is_empty())
     |            ^                     ^
     |
     = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
     |
1449 -         if (self.lines.is_empty())
1449 +         if self.lines.is_empty()
     |

error[E0599]: no associated item named `__from_secret_trampoline_wrapper` found for struct `std::string::String` in the current scope
   --> components/script/dom/bindings/str.rs:233:5
    |
233 |     #[side_effect_free_attr_full(method)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated item not found in `String`
    |
    = note: this error originates in the attribute macro `side_effect_free_attr_full` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unreachable statement
   --> components/script/dom/bindings/trace.rs:341:9
    |
340 |         panic!("This should never be called");
    |         ------------------------------------- any code following this expression is unreachable
341 |         unsafe {self.borrow().clone().unwrap_unsafe_dynamic_all::<L1, L2>()}.k.trace(trc);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement
    |
    = note: `#[warn(unreachable_code)]` on by default

warning: unreachable statement
   --> components/script/dom/bindings/trace.rs:349:9
    |
348 |         panic!("This should never be called");
    |         ------------------------------------- any code following this expression is unreachable
349 |         unsafe {self.borrow().clone().unwrap_unsafe_dynamic_all::<L1, L2>()}.trace(trc);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement

warning: unreachable statement
   --> components/script/dom/bindings/trace.rs:357:9
    |
356 |         panic!("This should never be called");
    |         ------------------------------------- any code following this expression is unreachable
357 |         unsafe {self.borrow().clone().unwrap_unsafe_dynamic_all::<L1, L2>()}.m.trace(trc);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement

warning: unreachable statement
   --> components/script/dom/bindings/trace.rs:365:9
    |
364 |         panic!("This should never be called");
    |         ------------------------------------- any code following this expression is unreachable
365 |         unsafe {self.borrow().clone().unwrap_unsafe_dynamic_all::<L1, L2>()}.trace(trc);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement

warning: unreachable statement
   --> components/script/dom/keyboardevent.rs:275:9
    |
274 |           panic!("Vincent: Can't call method InitKeyboardEvent");
    |           ------------------------------------------------------ any code following this expression is unreachable
275 | /         self.upcast::<UIEvent>()
276 | |         .InitUIEvent(type_arg, can_bubble_arg, cancelable_arg, view_arg, 0);
    | |____________________________________________________________________________^ unreachable statement

For more information about this error, try `rustc --explain E0599`.
warning: `script` (lib) generated 13 warnings
error: could not compile `script` due to 2 previous errors; 13 warnings emitted
Tests completed in 86.11s
